// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TreeView should render 1`] = `
<View
  animatedStyle={
    {
      "value": {},
    }
  }
  collapsable={false}
  layout={[Function]}
  style={
    {
      "gap": 8,
    }
  }
  testID="TreeView"
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    focusable={true}
    layout={[Function]}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "flexDirection": "row",
        "gap": 4,
      }
    }
    testID="TreeViewItem"
  >
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "aspectRatio": 1,
          "backgroundColor": "beige",
          "borderRadius": 8,
          "justifyContent": "center",
          "overflow": "hidden",
          "width": 20,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="black"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={16}
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="2"
        >
          <RNSVGPath
            d="M5 12h14"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
          <RNSVGPath
            d="M12 5v14"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      layout={[Function]}
      style={
        {
          "flex": 1,
          "gap": 8,
          "overflow": "hidden",
        }
      }
      testID="TreeViewDataRoot"
    >
      <Text
        style={
          [
            {
              "fontSize": 16,
              "lineHeight": 20,
            },
            false,
          ]
        }
      >
        Phone Category
      </Text>
    </View>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    focusable={true}
    layout={[Function]}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "flexDirection": "row",
        "gap": 4,
      }
    }
    testID="TreeViewItem"
  >
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "aspectRatio": 1,
          "backgroundColor": "beige",
          "borderRadius": 8,
          "justifyContent": "center",
          "overflow": "hidden",
          "width": 20,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="black"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={16}
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="2"
        >
          <RNSVGPath
            d="M5 12h14"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
          <RNSVGPath
            d="M12 5v14"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      layout={[Function]}
      style={
        {
          "flex": 1,
          "gap": 8,
          "overflow": "hidden",
        }
      }
      testID="TreeViewDataRoot"
    >
      <Text
        style={
          [
            {
              "fontSize": 16,
              "lineHeight": 20,
            },
            false,
          ]
        }
      >
        Laptop Category
      </Text>
    </View>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    focusable={true}
    layout={[Function]}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "flexDirection": "row",
        "gap": 4,
      }
    }
    testID="TreeViewItem"
  >
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "aspectRatio": 1,
          "backgroundColor": "beige",
          "borderRadius": 8,
          "justifyContent": "center",
          "overflow": "hidden",
          "width": 20,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="black"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={16}
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="2"
        >
          <RNSVGPath
            d="M5 12h14"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
          <RNSVGPath
            d="M12 5v14"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      layout={[Function]}
      style={
        {
          "flex": 1,
          "gap": 8,
          "overflow": "hidden",
        }
      }
      testID="TreeViewDataRoot"
    >
      <Text
        style={
          [
            {
              "fontSize": 16,
              "lineHeight": 20,
            },
            false,
          ]
        }
      >
        Tablet Category
      </Text>
    </View>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    focusable={true}
    layout={[Function]}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "flexDirection": "row",
        "gap": 4,
      }
    }
    testID="TreeViewItem"
  >
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "aspectRatio": 1,
          "backgroundColor": "beige",
          "borderRadius": 8,
          "justifyContent": "center",
          "overflow": "hidden",
          "width": 20,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="black"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={16}
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="2"
        >
          <RNSVGPath
            d="M5 12h14"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
          <RNSVGPath
            d="M12 5v14"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      layout={[Function]}
      style={
        {
          "flex": 1,
          "gap": 8,
          "overflow": "hidden",
        }
      }
      testID="TreeViewDataRoot"
    >
      <Text
        style={
          [
            {
              "fontSize": 16,
              "lineHeight": 20,
            },
            false,
          ]
        }
      >
        Watch Category
      </Text>
    </View>
  </View>
</View>
`;
